{"version":3,"sources":["./src/app/directives/subscriptions.directive.ts","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/left-side-panel/left-side-panel.module.ts","./src/app/services/theming.service.ts","./src/environments/environment.ts","./src/app/components/root/root.component.html","./src/app/components/root/root.component.ts","./src/app/components/root/root.module.ts","./src/app/components/header/header.module.ts","./src/app/app.module.ts","./src/app/components/left-side-panel/left-side-panel.component.html","./src/app/components/left-side-panel/left-side-panel.component.ts","./src/app/services/header.service.ts","./src/app/enums/themes.enum.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Directive, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Directive({\r\n\tselector: '[pfSubscriptions]',\r\n})\r\nexport class SubscriptionsDirective implements OnDestroy {\r\n  public subscriptions: Array<Subscription> = [];\r\n\r\n  public ngOnDestroy(): void {\r\n  \tthis.subscriptions.forEach((subscription: Subscription) => subscription.unsubscribe());\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HeaderButton } from '../../models/HeaderButton';\r\nimport { HeaderService } from 'src/app/services/header.service';\r\nimport { ThemingService } from 'src/app/services/theming.service';\r\nimport { SubscriptionsDirective } from 'src/app/directives/subscriptions.directive';\r\nimport { Theme } from 'src/app/enums/themes.enum';\r\n\r\n@Component({\r\n\tselector: 'pf-header',\r\n\ttemplateUrl: './header.component.html',\r\n\tstyleUrls: ['./header.component.scss'],\r\n})\r\nexport class HeaderComponent extends SubscriptionsDirective implements OnInit {\r\n  public headerButtons: Array<HeaderButton> = [];\r\n  public darkThemeSelected: boolean;\r\n\r\n  constructor(public readonly themingService: ThemingService, private readonly headerService: HeaderService) {\r\n  \tsuper();\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n  \tthis.headerButtons = this.headerService.HeaderButtons;\r\n\r\n  \tthis.subscriptions.push(\r\n  \t\tthis.themingService.selectedTheme$.subscribe((selectedTheme: Theme) => {\r\n  \t\t\tthis.darkThemeSelected = selectedTheme === Theme.darkMode;\r\n  \t\t})\r\n  \t);\r\n  }\r\n}\r\n","<header class=\"header-container\">\n\t<div class=\"header-container__logo-wrapper\">\n\t\t<img\n\t\t\tsrc=\"assets/images/logo.jpg\"\n\t\t\talt=\"\"\n\t\t\tclass=\"header-container__logo-wrapper--logo\"\n\t\t/>\n\t</div>\n\t<div class=\"header-container__menu-items--left\" *ngIf=\"headerButtons\">\n\t\t<button\n\t\t\t*ngFor=\"let headerButton of headerButtons\"\n\t\t\t(click)=\"(headerButton.onClick)\"\n\t\t>\n\t\t\t{{ headerButton.displayName }}\n\t\t</button>\n\t</div>\n\t<div class=\"header-container__menu-items--right\">\n\t\t<mat-slide-toggle\n\t\t\t[disabled]=\"themingService.useSystemTheme$ | async\"\n\t\t\t[checked]=\"darkThemeSelected\"\n\t\t\t(change)=\"themingService.toggleTheme()\"\n\t\t>\n\t\t\tDark Theme\n\t\t</mat-slide-toggle>\n\t\t<mat-slide-toggle\n\t\t\t[checked]=\"themingService.useSystemTheme$ | async\"\n\t\t\t(change)=\"themingService.toggleUseSystemTheme()\"\n\t\t>\n\t\t\tUse System Theme\n\t\t</mat-slide-toggle>\n\t</div>\n</header>\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { FormsModule } from '@angular/forms';\r\nimport { LeftSidePanelComponent } from './left-side-panel.component';\r\n\r\n@NgModule({\r\n\tdeclarations: [LeftSidePanelComponent],\r\n\timports: [CommonModule, FormsModule],\r\n\texports: [LeftSidePanelComponent],\r\n})\r\nexport class LeftSidePanelModule {}\r\n","import { Injectable, ApplicationRef } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Theme } from '../enums/themes.enum';\r\nimport localForage from 'localforage';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root',\r\n})\r\nexport class ThemingService {\r\n  public selectedTheme$: BehaviorSubject<Theme> = new BehaviorSubject<Theme>(this.preferedTheme);\r\n  public useSystemTheme$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\r\n\r\n  private _darkModeMedia: MediaQueryList;\r\n  private readonly themeListenerEvent = (e: MediaQueryListEvent) => {\r\n  \tconst turnOn: boolean = e.matches;\r\n\r\n  \tthis.setTheme(turnOn ? Theme.darkMode : Theme.lightMode);\r\n  \tthis.ref.tick();\r\n  };\r\n\r\n  constructor(private readonly ref: ApplicationRef) {\r\n  \tlocalForage.getItem('use-system-theme', (err: any, value: boolean) => {\r\n  \t\tthis.setUseSystemTheme(value ?? true);\r\n  \t});\r\n  }\r\n\r\n  public toggleTheme(): void {\r\n  \tif (this.useSystemTheme$.value) {\r\n  \t\treturn;\r\n  \t}\r\n\r\n  \tconst currentTheme: Theme = this.selectedTheme$.value;\r\n  \tthis.setTheme(currentTheme === Theme.darkMode ? Theme.lightMode : Theme.darkMode);\r\n  }\r\n\r\n  public toggleUseSystemTheme(): void {\r\n  \tthis.setUseSystemTheme(!this.useSystemTheme$.value);\r\n  }\r\n\r\n  public get preferedTheme(): Theme {\r\n  \tconst darkMode: boolean = window.matchMedia && this.mediaQueryList.matches;\r\n  \treturn darkMode ? Theme.darkMode : Theme.lightMode;\r\n  }\r\n\r\n  private get mediaQueryList(): MediaQueryList {\r\n  \tif (!this._darkModeMedia) {\r\n  \t\tthis._darkModeMedia = window.matchMedia('(prefers-color-scheme: dark)');\r\n  \t}\r\n  \treturn this._darkModeMedia;\r\n  }\r\n\r\n  private setUseSystemTheme(shouldUse: boolean): void {\r\n  \tlocalForage.setItem('use-system-theme', shouldUse);\r\n\r\n  \tthis.useSystemTheme$.next(shouldUse);\r\n  \tif (shouldUse) {\r\n  \t\tthis.setTheme(this.preferedTheme);\r\n  \t\tthis.setupSystemThemeListener();\r\n  \t} else {\r\n  \t\tthis.removeSystemThemeListener();\r\n  \t}\r\n  }\r\n\r\n  private setupSystemThemeListener(): void {\r\n  \tconsole.log('Start Event Listener');\r\n  \tthis.mediaQueryList.addEventListener('change', this.themeListenerEvent);\r\n  }\r\n\r\n  private removeSystemThemeListener(): void {\r\n  \tconsole.log('Remove Event Listener');\r\n  \tthis.mediaQueryList.removeEventListener('change', this.themeListenerEvent);\r\n  }\r\n\r\n  private setTheme(themeToSet: Theme) {\r\n  \tlocalForage.setItem('theme', themeToSet);\r\n\r\n  \tthis.selectedTheme$.next(themeToSet);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n\tproduction: false,\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","<div class=\"container\">\r\n\t<pf-header class=\"container__header\"></pf-header>\r\n\t<pf-left-side-panel class=\"container__left-side-panel\"></pf-left-side-panel>\r\n\t<div class=\"container__content\">\r\n\t\t<router-outlet *ngIf=\"false\"></router-outlet>\r\n\t</div>\r\n</div>\r\n","import { Component, HostBinding, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { Theme } from 'src/app/enums/themes.enum';\r\nimport { ThemingService } from 'src/app/services/theming.service';\r\n\r\n@Component({\r\n\tselector: 'pf-root',\r\n\ttemplateUrl: './root.component.html',\r\n\tstyleUrls: ['./root.component.scss'],\r\n})\r\nexport class RootComponent implements OnInit {\r\n  @HostBinding('class')\r\n  public cssClass: string = this.themingService.preferedTheme;\r\n  public title = 'pf';\r\n\r\n  private themeSubscription: Subscription;\r\n  private useSystemThemeSubscription: Subscription;\r\n\r\n  constructor(public readonly themingService: ThemingService) {}\r\n\r\n  public ngOnInit(): void {\r\n  \tthis.themeSubscription = this.themingService.selectedTheme$.subscribe((themeToApply: Theme) => {\r\n  \t\tthis.cssClass = themeToApply;\r\n  \t});\r\n  \tthis.useSystemThemeSubscription = this.themingService.useSystemTheme$.subscribe((useSystemTheme: boolean) => {});\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n  \tthis.themeSubscription?.unsubscribe;\r\n  \tthis.useSystemThemeSubscription?.unsubscribe();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { RootComponent } from './root.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HeaderModule } from '../header/header.module';\r\nimport { LeftSidePanelModule } from '../left-side-panel/left-side-panel.module';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n\tdeclarations: [RootComponent],\r\n\timports: [FormsModule, RouterModule, CommonModule, HeaderModule, LeftSidePanelModule],\r\n})\r\nexport class RootModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HeaderComponent } from './header.component';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\n\r\n@NgModule({\r\n\tdeclarations: [HeaderComponent],\r\n\timports: [CommonModule, FormsModule, MatSlideToggleModule],\r\n\texports: [HeaderComponent],\r\n})\r\nexport class HeaderModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RootComponent } from './components/root/root.component';\r\nimport { RootModule } from './components/root/root.module';\r\nimport { SubscriptionsDirective } from './directives/subscriptions.directive';\r\n\r\n@NgModule({\r\n\tdeclarations: [SubscriptionsDirective],\r\n\timports: [BrowserModule, BrowserAnimationsModule, RootModule],\r\n\tproviders: [],\r\n\tbootstrap: [RootComponent],\r\n})\r\nexport class AppModule {}\r\n","<div class=\"left-side-panel-container\" *ngIf=\"buttons\">\n\t<button class=\"btn btn-header btn-primary\">primary</button>\n\t<button class=\"btn btn-accent\">accent</button>\n\t<button class=\"btn btn-warning\">warning</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { HeaderButton } from 'src/app/models/HeaderButton';\r\n\r\n@Component({\r\n\tselector: 'pf-left-side-panel',\r\n\ttemplateUrl: './left-side-panel.component.html',\r\n\tstyleUrls: ['./left-side-panel.component.scss'],\r\n})\r\nexport class LeftSidePanelComponent implements OnInit {\r\n  public buttons: Array<HeaderButton> = [];\r\n\r\n  public ngOnInit(): void {\r\n  \tthis.buttons = [\r\n  \t\t{\r\n  \t\t\tid: 'test',\r\n  \t\t\tdisplayName: 'test',\r\n  \t\t\tname: 'test'\r\n  \t\t},\r\n  \t\t{\r\n  \t\t\tid: 'test',\r\n  \t\t\tdisplayName: 'test',\r\n  \t\t\tname: 'test'\r\n  \t\t}\r\n  \t];\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HeaderButton } from '../models/HeaderButton';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root',\r\n})\r\nexport class HeaderService {\r\n\tconstructor() {}\r\n\r\n\tpublic get HeaderButtons(): Array<HeaderButton> {\r\n\t\tconst homeButton: HeaderButton = {\r\n\t\t\tid: 'home',\r\n\t\t\tname: 'home',\r\n\t\t\tdisplayName: 'Home',\r\n\t\t};\r\n\t\tconst aboutMeButton: HeaderButton = {\r\n\t\t\tid: 'aboutMe',\r\n\t\t\tname: 'aboutMe',\r\n\t\t\tdisplayName: 'About Me',\r\n\t\t};\r\n\t\tconst repositoryChildButtons: Array<HeaderButton> = [\r\n\t\t\t{\r\n\t\t\t\tid: 'contacts-ngrx',\r\n\t\t\t\tname: 'contacts-ngrx',\r\n\t\t\t\tdisplayName: 'Contacts - NGRX',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tid: 'restaurant-menu-observable-store',\r\n\t\t\t\tname: 'restaurant-menu-observable-store',\r\n\t\t\t\tdisplayName: 'Restaurant Menu - Observable Store',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tid: 'shopping-cart-ngxs',\r\n\t\t\t\tname: 'shopping-cart-ngxs',\r\n\t\t\t\tdisplayName: 'Shopping Cart - NGXS',\r\n\t\t\t},\r\n\t\t];\r\n\t\tconst repositoriesButton: HeaderButton = {\r\n\t\t\tid: 'repositories',\r\n\t\t\tname: 'repositories',\r\n\t\t\tdisplayName: 'Repositories',\r\n\t\t\tchildButtons: repositoryChildButtons,\r\n\t\t};\r\n\r\n\t\treturn [homeButton, aboutMeButton, repositoriesButton];\r\n\t}\r\n}\r\n","export enum Theme {\r\n  darkMode = 'dark-theme',\r\n  lightMode = 'light-theme',\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n\tenableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic()\r\n\t.bootstrapModule(AppModule)\r\n\t.catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}