{"version":3,"sources":["./src/app/directives/subscriptions.directive.ts","./src/app/components/header/header.component.ts","./src/app/components/header/header.component.html","./src/app/components/left-side-panel/left-side-panel.module.ts","./src/app/services/theming.service.ts","./src/environments/environment.ts","./src/app/components/root/root.component.ts","./src/app/components/root/root.component.html","./src/app/components/main/main.component.ts","./src/app/components/main/main.component.html","./src/app/components/main/about-me/about-me.component.ts","./src/app/components/main/about-me/about-me.component.html","./src/app/components/main/main.module.ts","./src/app/components/main/repositories/repositories.component.ts","./src/app/components/main/repositories/repositories.component.html","./src/app/components/header/header.module.ts","./src/app/components/left-side-panel/left-side-panel.component.ts","./src/app/components/left-side-panel/left-side-panel.component.html","./src/app/services/header.service.ts","./src/app/enums/themes.enum.ts","./src/app/modules/router.module.ts","./src/app/modules/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Directive, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Directive({\r\n  selector: 'subscriptions',\r\n})\r\nexport class SubscriptionsDirective implements OnDestroy {\r\n  public subscriptions: Array<Subscription> = [];\r\n\r\n  public ngOnDestroy(): void {\r\n    this.subscriptions.forEach((subscription: Subscription) => subscription.unsubscribe());\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HeaderButton } from '../../models/HeaderButton';\r\nimport { HeaderService } from 'src/app/services/header.service';\r\nimport { ThemingService } from 'src/app/services/theming.service';\r\nimport { SubscriptionsDirective } from 'src/app/directives/subscriptions.directive';\r\nimport { Theme } from 'src/app/enums/themes.enum';\r\n\r\n@Component({\r\n\tselector: 'pf-header',\r\n\ttemplateUrl: './header.component.html',\r\n\tstyleUrls: ['./header.component.scss'],\r\n})\r\nexport class HeaderComponent extends SubscriptionsDirective implements OnInit {\r\n  public headerButtons: Array<HeaderButton> = [];\r\n  public systemThemeSelected: boolean;\r\n\r\n  constructor(public readonly themingService: ThemingService, private readonly headerService: HeaderService) {\r\n  \tsuper();\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n  \tthis.headerButtons = this.headerService.HeaderButtons;\r\n\r\n  \tthis.subscriptions.push(\r\n  \t\tthis.themingService.useSystemTheme$.subscribe((useSystemTheme: boolean) => {\r\n  \t\t\tthis.systemThemeSelected = useSystemTheme\r\n  \t\t})\r\n  \t);\r\n  }\r\n}\r\n","<header class='header-container'>\r\n  <mat-toolbar class='toolbar' color='primary'>\r\n    <button\r\n      mat-icon-button\r\n      class='example-icon'\r\n      aria-label='Example icon-button with menu icon'\r\n    >\r\n      <mat-icon>menu</mat-icon>\r\n    </button>\r\n    <span>My Portfolio</span>\r\n    <span class='spacer'></span>\r\n    <button\r\n      *ngIf='!systemThemeSelected'\r\n      mat-icon-button\r\n      (click)='themingService.toggleTheme()'\r\n    >\r\n      <mat-icon>dark_mode</mat-icon>\r\n    </button>\r\n    <mat-slide-toggle\r\n      [checked]='systemThemeSelected'\r\n      (change)='themingService.toggleUseSystemTheme()'\r\n    >\r\n      Use System Theme\r\n    </mat-slide-toggle>\r\n  </mat-toolbar>\r\n</header>\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { FormsModule } from '@angular/forms';\r\nimport { LeftSidePanelComponent } from './left-side-panel.component';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@NgModule({\r\n\tdeclarations: [LeftSidePanelComponent],\r\n\timports: [FormsModule, MatSidenavModule, MatIconModule, MatListModule, RouterModule],\r\n\texports: [LeftSidePanelComponent],\r\n})\r\nexport class LeftSidePanelModule {}\r\n","import { ApplicationRef, Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Theme } from '../enums/themes.enum';\r\nimport localForage from 'localforage';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ThemingService {\r\n  public selectedTheme$: BehaviorSubject<Theme> = new BehaviorSubject<Theme>(this.preferedTheme);\r\n  public useSystemTheme$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\r\n\r\n  private _darkModeMedia: MediaQueryList;\r\n  private readonly themeListenerEvent = (e: MediaQueryListEvent) => {\r\n    const turnOn: boolean = e.matches;\r\n\r\n    this.setTheme(turnOn ? Theme.darkMode : Theme.lightMode);\r\n    this.ref.tick();\r\n  };\r\n\r\n  constructor(private readonly ref: ApplicationRef) {\r\n    localForage.getItem('use-system-theme', (err: any, value: boolean) => {\r\n      this.setUseSystemTheme(value ?? true);\r\n    });\r\n  }\r\n\r\n  public toggleTheme(): void {\r\n    if (this.useSystemTheme$.value) {\r\n      return;\r\n    }\r\n\r\n    const currentTheme: Theme = this.selectedTheme$.value;\r\n    this.setTheme(currentTheme === Theme.darkMode ? Theme.lightMode : Theme.darkMode);\r\n  }\r\n\r\n  public toggleUseSystemTheme(): void {\r\n    this.setUseSystemTheme(!this.useSystemTheme$.value);\r\n  }\r\n\r\n  public get preferedTheme(): Theme {\r\n    const darkMode: boolean = window.matchMedia && this.mediaQueryList.matches;\r\n    return darkMode ? Theme.darkMode : Theme.lightMode;\r\n  }\r\n\r\n  private get mediaQueryList(): MediaQueryList {\r\n    if (!this._darkModeMedia) {\r\n      this._darkModeMedia = window.matchMedia('(prefers-color-scheme: dark)');\r\n    }\r\n    return this._darkModeMedia;\r\n  }\r\n\r\n  private setUseSystemTheme(shouldUse: boolean): void {\r\n    localForage.setItem('use-system-theme', shouldUse);\r\n\r\n    this.useSystemTheme$.next(shouldUse);\r\n    if (shouldUse) {\r\n      this.setTheme(this.preferedTheme);\r\n      this.setupSystemThemeListener();\r\n    } else {\r\n      this.removeSystemThemeListener();\r\n    }\r\n  }\r\n\r\n  private setupSystemThemeListener(): void {\r\n    console.log('Start Event Listener');\r\n    this.mediaQueryList.addEventListener('change', this.themeListenerEvent);\r\n  }\r\n\r\n  private removeSystemThemeListener(): void {\r\n    console.log('Remove Event Listener');\r\n    this.mediaQueryList.removeEventListener('change', this.themeListenerEvent);\r\n  }\r\n\r\n  private setTheme(themeToSet: Theme) {\r\n    localForage.setItem('theme', themeToSet);\r\n\r\n    this.selectedTheme$.next(themeToSet);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n\tproduction: false,\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, HostBinding, OnInit } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { Theme } from 'src/app/enums/themes.enum';\r\nimport { ThemingService } from 'src/app/services/theming.service';\r\n\r\n@Component({\r\n\tselector: 'pf-root',\r\n\ttemplateUrl: './root.component.html',\r\n\tstyleUrls: ['./root.component.scss'],\r\n})\r\nexport class RootComponent implements OnInit {\r\n  @HostBinding('class')\r\n  public cssClass: string = this.themingService.preferedTheme;\r\n  public title = 'pf';\r\n\r\n  private themeSubscription: Subscription;\r\n  private useSystemThemeSubscription: Subscription;\r\n\r\n  constructor(public readonly themingService: ThemingService) {}\r\n\r\n  public ngOnInit(): void {\r\n  \tthis.themeSubscription = this.themingService.selectedTheme$.subscribe((themeToApply: Theme) => {\r\n  \t\tthis.cssClass = themeToApply;\r\n  \t});\r\n  \tthis.useSystemThemeSubscription = this.themingService.useSystemTheme$.subscribe((useSystemTheme: boolean) => {});\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n  \tthis.themeSubscription?.unsubscribe;\r\n  \tthis.useSystemThemeSubscription?.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"container\">\r\n\t<pf-header class=\"container__header\"></pf-header>\r\n\t<pf-left-side-panel class=\"container__left-side-panel\"></pf-left-side-panel>\r\n\t<div class=\"container__content\">\r\n\t\t<router-outlet></router-outlet>\r\n\t</div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n\tselector: 'pf-main',\r\n\ttemplateUrl: './main.component.html',\r\n\tstyleUrls: ['./main.component.scss']\r\n})\r\nexport class MainComponent implements OnInit {\r\n  constructor(public readonly routerService: ActivatedRoute) {\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n\r\n  }\r\n}\r\n","<div class='main'>\n  <div class='main__title'>\n    <h1>Router Name Goes Here</h1>\n  </div>\n  <!--\t <mat-divider></mat-divider>-->\n  <section class='main__content'>\n    <router-outlet></router-outlet>\n  </section>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'pf-about-me',\n  templateUrl: './about-me.component.html',\n  styleUrls: ['./about-me.component.scss']\n})\nexport class AboutMeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>about-me works! </p>\n","import { NgModule } from '@angular/core';\r\n\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MainComponent } from './main.component';\r\nimport { AppRouterModule } from '../../modules/router.module';\r\n\r\n@NgModule({\r\n  declarations: [MainComponent],\r\n  imports: [FormsModule, AppRouterModule],\r\n  exports: [MainComponent],\r\n})\r\nexport class MainModule {\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'pf-repositories',\n  templateUrl: './repositories.component.html',\n  styleUrls: ['./repositories.component.scss']\n})\nexport class RepositoriesComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>repositories works!</p>\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HeaderComponent } from './header.component';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\n\r\n@NgModule({\r\n  declarations: [HeaderComponent],\r\n  imports: [CommonModule, FormsModule, MatButtonToggleModule, MatToolbarModule, MatIconModule, MatButtonModule, MatSlideToggleModule],\r\n  exports: [HeaderComponent],\r\n})\r\nexport class HeaderModule {\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HeaderButton } from 'src/app/models/HeaderButton';\r\n\r\n@Component({\r\n\tselector: 'pf-left-side-panel',\r\n\ttemplateUrl: './left-side-panel.component.html',\r\n\tstyleUrls: ['./left-side-panel.component.scss'],\r\n})\r\nexport class LeftSidePanelComponent implements OnInit {\r\n  public buttons: Array<HeaderButton> = [];\r\n\r\n  public ngOnInit(): void {\r\n  \tthis.buttons = [\r\n  \t\t{\r\n  \t\t\tid: 'test',\r\n  \t\t\tdisplayName: 'test',\r\n  \t\t\tname: 'test'\r\n  \t\t},\r\n  \t\t{\r\n  \t\t\tid: 'test',\r\n  \t\t\tdisplayName: 'test',\r\n  \t\t\tname: 'test'\r\n  \t\t}\r\n  \t];\r\n  }\r\n}\r\n","<mat-sidenav [opened]='true' color='accent'>\n  <mat-nav-list>\n    <a mat-list-item routerLink='AboutMe'>\n      <mat-icon>dashboard</mat-icon>\n      About Me\n    </a>\n    <a mat-list-item routerLink='Repositories'>\n      <mat-icon>dashboard</mat-icon>\n      Repositories\n    </a>\n  </mat-nav-list>\n</mat-sidenav>\n","import { Injectable } from '@angular/core';\r\nimport { HeaderButton } from '../models/HeaderButton';\r\n\r\n@Injectable({\r\n\tprovidedIn: 'root',\r\n})\r\nexport class HeaderService {\r\n\tconstructor() {}\r\n\r\n\tpublic get HeaderButtons(): Array<HeaderButton> {\r\n\t\tconst homeButton: HeaderButton = {\r\n\t\t\tid: 'home',\r\n\t\t\tname: 'home',\r\n\t\t\tdisplayName: 'Home',\r\n\t\t\tclass: 'btn btn-primary btn-header'\r\n\t\t};\r\n\t\tconst aboutMeButton: HeaderButton = {\r\n\t\t\tid: 'aboutMe',\r\n\t\t\tname: 'aboutMe',\r\n\t\t\tdisplayName: 'About Me',\r\n\t\t\tclass: 'btn btn-accent btn-header'\r\n\t\t};\r\n\t\tconst repositoriesButton: HeaderButton = {\r\n\t\t\tid: 'repositories',\r\n\t\t\tname: 'repositories',\r\n\t\t\tdisplayName: 'Repositories',\r\n\t\t\tclass: 'btn btn-warning btn-header',\r\n\t\t\tchildButtons: [],\r\n\t\t};\r\n\t\trepositoriesButton.childButtons.push(...[\r\n\t\t\t{\r\n\t\t\t\tid: 'contacts-ngrx',\r\n\t\t\t\tname: 'contacts-ngrx',\r\n\t\t\t\tdisplayName: 'Contacts - NGRX',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tid: 'restaurant-menu-observable-store',\r\n\t\t\t\tname: 'restaurant-menu-observable-store',\r\n\t\t\t\tdisplayName: 'Restaurant Menu - Observable Store',\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tid: 'shopping-cart-ngxs',\r\n\t\t\t\tname: 'shopping-cart-ngxs',\r\n\t\t\t\tdisplayName: 'Shopping Cart - NGXS',\r\n\t\t\t},\r\n\t\t]);\r\n\r\n\t\treturn [homeButton, aboutMeButton, repositoriesButton];\r\n\t}\r\n}\r\n","export enum Theme {\r\n  darkMode = 'dark-theme',\r\n  lightMode = 'light-theme',\r\n  system = 'system'\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AboutMeComponent } from '../components/main/about-me/about-me.component';\r\nimport { MainComponent } from '../components/main/main.component';\r\nimport { RepositoriesComponent } from '../components/main/repositories/repositories.component';\r\n\r\nconst mainRoutes: Routes = [\r\n  { path: '', redirectTo: 'AboutMe', pathMatch: 'full' },\r\n  { path: 'AboutMe', component: AboutMeComponent },\r\n  { path: 'Repositories', component: RepositoriesComponent },\r\n  { path: '**', redirectTo: 'AboutMe', pathMatch: 'full' },\r\n];\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: MainComponent, children: [\r\n      ...mainRoutes,\r\n    ],\r\n  },\r\n  { path: '**', redirectTo: '', pathMatch: 'full' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRouterModule {\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RootComponent } from '../components/root/root.component';\r\nimport { AppRouterModule } from './router.module';\r\nimport { SubscriptionsDirective } from '../directives/subscriptions.directive';\r\nimport { HeaderModule } from '../components/header/header.module';\r\nimport { LeftSidePanelModule } from '../components/left-side-panel/left-side-panel.module';\r\nimport { MainModule } from '../components/main/main.module';\r\n\r\nconst rootModules: Array<any> = [HeaderModule, LeftSidePanelModule, MainModule];\r\n\r\n@NgModule({\r\n  declarations: [SubscriptionsDirective, RootComponent],\r\n  imports: [AppRouterModule, BrowserModule, BrowserAnimationsModule, ...rootModules],\r\n  providers: [],\r\n  bootstrap: [RootComponent],\r\n})\r\nexport class AppModule {\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/modules/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}