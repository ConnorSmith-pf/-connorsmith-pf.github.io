{"version":3,"sources":["./src/app/components/header/header.component.html","./src/app/components/header/header.component.ts","./src/app/services/theming.service.ts","./src/environments/environment.ts","./src/app/components/root/root.component.ts","./src/app/components/root/root.component.html","./src/app/components/root/root.module.ts","./src/app/components/header/header.module.ts","./src/app/app.module.ts","./src/app/services/header.service.ts","./src/app/enums/themes.enum.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["<div class=\"header-container\">\n  <div class=\"header-container__logo-wrapper\">\n    <img\n      src=\"assets/images/logo.jpg\"\n      alt=\"\"\n      class=\"header-container__logo-wrapper--logo\"\n    />\n  </div>\n  <div class=\"header-container__menu-items-wrapper\" *ngIf=\"headerButtons\">\n    <button\n      *ngFor=\"let headerButton of headerButtons\"\n      (click)=\"(headerButton.onClick)\"\n    >\n      {{ headerButton.displayName }}\n    </button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { HeaderButton } from '../../models/HeaderButton';\nimport { HeaderService } from 'src/app/services/header.service';\n\n@Component({\n  selector: 'pf-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent implements OnInit {\n  public headerButtons: Array<HeaderButton> = [];\n\n  constructor(private readonly headerService: HeaderService) {}\n\n  public ngOnInit(): void {\n    this.headerButtons = this.headerService.HeaderButtons;\n  }\n}\n","import { Injectable, ApplicationRef } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Theme } from '../enums/themes.enum';\r\nimport localForage from 'localforage';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ThemingService {\r\n  public selectedTheme$: BehaviorSubject<Theme> = new BehaviorSubject<Theme>(this.preferedTheme);\r\n  public useSystemTheme$: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(true);\r\n\r\n  private _darkModeMedia: MediaQueryList;\r\n  private themeListenerEvent = (e: MediaQueryListEvent) => {\r\n    const turnOn: boolean = e.matches;\r\n\r\n    this.setTheme(turnOn ? Theme.DARK_MODE : Theme.LIGHT_MODE);\r\n    this.ref.tick();\r\n  };\r\n\r\n  constructor(private readonly ref: ApplicationRef) {\r\n    localForage.getItem('use-system-theme', (err: any, value: boolean) => {\r\n      this.setUseSystemTheme(value ?? true);\r\n    });\r\n  }\r\n\r\n  public toggleTheme(): void {\r\n    if (this.useSystemTheme$.value) {\r\n      return;\r\n    }\r\n\r\n    const currentTheme: Theme = this.selectedTheme$.value;\r\n    this.setTheme(currentTheme === Theme.DARK_MODE ? Theme.LIGHT_MODE : Theme.DARK_MODE);\r\n  }\r\n\r\n  public toggleUseSystemTheme(): void {\r\n    this.setUseSystemTheme(!this.useSystemTheme$.value);\r\n  }\r\n\r\n  public get preferedTheme(): Theme {\r\n    const darkMode: boolean = window.matchMedia && this.mediaQueryList.matches;\r\n    return darkMode ? Theme.DARK_MODE : Theme.LIGHT_MODE;\r\n  }\r\n\r\n  private get mediaQueryList(): MediaQueryList {\r\n    if (!this._darkModeMedia) {\r\n      this._darkModeMedia = window.matchMedia('(prefers-color-scheme: dark)');\r\n    }\r\n    return this._darkModeMedia;\r\n  }\r\n\r\n  private setUseSystemTheme(shouldUse: boolean): void {\r\n    localForage.setItem('use-system-theme', shouldUse);\r\n\r\n    this.useSystemTheme$.next(shouldUse);\r\n    if (shouldUse) {\r\n      this.setTheme(this.preferedTheme);\r\n      this.setupSystemThemeListener();\r\n    } else {\r\n      this.removeSystemThemeListener();\r\n    }\r\n  }\r\n\r\n  private setupSystemThemeListener(): void {\r\n    console.log('Start Event Listener');\r\n    this.mediaQueryList.addEventListener('change', this.themeListenerEvent);\r\n  }\r\n\r\n  private removeSystemThemeListener(): void {\r\n    console.log('Remove Event Listener');\r\n    this.mediaQueryList.removeEventListener('change', this.themeListenerEvent);\r\n  }\r\n\r\n  private setTheme(themeToSet: Theme) {\r\n    localForage.setItem('theme', themeToSet);\r\n\r\n    this.selectedTheme$.next(themeToSet);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, HostBinding, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Theme } from 'src/app/enums/themes.enum';\nimport { ThemingService } from 'src/app/services/theming.service';\n\n@Component({\n  selector: 'pf-root',\n  templateUrl: './root.component.html',\n  styleUrls: ['./root.component.scss'],\n})\nexport class RootComponent implements OnInit {\n  @HostBinding('class')\n  public cssClass: string = this.themingService.preferedTheme;\n  public title = 'pf';\n\n  private themeSubscription: Subscription;\n  private useSystemThemeSubscription: Subscription;\n\n  constructor(public readonly themingService: ThemingService) {}\n\n  public ngOnInit(): void {\n    this.themeSubscription = this.themingService.selectedTheme$.subscribe((themeToApply: Theme) => {\n      this.cssClass = themeToApply;\n    });\n    this.useSystemThemeSubscription = this.themingService.useSystemTheme$.subscribe((useSystemTheme: boolean) => {});\n  }\n\n  public ngOnDestroy(): void {\n    this.themeSubscription?.unsubscribe;\n    this.useSystemThemeSubscription?.unsubscribe();\n  }\n}\n","<!-- <pf-header></pf-header> -->\r\n<div class=\"mat-app-background\">\r\n  <button mat-raised-button (click)=\"themingService.toggleTheme()\">Toggle Theme</button>\r\n  <button mat-raised-button (click)=\"themingService.toggleUseSystemTheme()\">Toggle Use System Theme</button>\r\n  <mat-card class=\"light-theme\">\r\n    Main Theme:\r\n    <button mat-raised-button color=\"primary\">Primary</button>\r\n    <button mat-raised-button color=\"accent\">Accent</button>\r\n    <button mat-raised-button color=\"warn\">Warning</button>\r\n  </mat-card>\r\n</div>\r\n","import { NgModule } from '@angular/core';\n\nimport { RootComponent } from './root.component';\nimport { FormsModule } from '@angular/forms';\nimport { HeaderModule } from '../header/header.module';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\n\n@NgModule({\n  declarations: [RootComponent],\n  imports: [MatButtonModule, MatCardModule, FormsModule, HeaderModule],\n})\nexport class RootModule {}\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HeaderComponent } from './header.component';\r\n\r\n@NgModule({\r\n  declarations: [HeaderComponent],\r\n  imports: [CommonModule, FormsModule],\r\n  exports: [HeaderComponent],\r\n})\r\nexport class HeaderModule {}\r\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RootComponent } from './components/root/root.component';\nimport { RootModule } from './components/root/root.module';\n\n@NgModule({\n  declarations: [],\n  imports: [BrowserModule, BrowserAnimationsModule, RootModule],\n  providers: [],\n  bootstrap: [RootComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\r\nimport { HeaderButton } from '../models/HeaderButton';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class HeaderService {\r\n  constructor() {}\r\n\r\n  public get HeaderButtons(): Array<HeaderButton> {\r\n    const homeButton: HeaderButton = {\r\n      id: 'home',\r\n      name: 'home',\r\n      displayName: 'Home',\r\n    };\r\n    const aboutMeButton: HeaderButton = {\r\n      id: 'aboutMe',\r\n      name: 'aboutMe',\r\n      displayName: 'About Me',\r\n    };\r\n    const repositoryChildButtons: Array<HeaderButton> = [\r\n      {\r\n        id: 'contacts-ngrx',\r\n        name: 'contacts-ngrx',\r\n        displayName: 'Contacts - NGRX',\r\n      },\r\n      {\r\n        id: 'restaurant-menu-observable-store',\r\n        name: 'restaurant-menu-observable-store',\r\n        displayName: 'Restaurant Menu - Observable Store',\r\n      },\r\n      {\r\n        id: 'shopping-cart-ngxs',\r\n        name: 'shopping-cart-ngxs',\r\n        displayName: 'Shopping Cart - NGXS',\r\n      },\r\n    ];\r\n    const repositoriesButton: HeaderButton = {\r\n      id: 'repositories',\r\n      name: 'repositories',\r\n      displayName: 'Repositories',\r\n      childButtons: repositoryChildButtons,\r\n    };\r\n\r\n    return [homeButton, aboutMeButton, repositoriesButton];\r\n  }\r\n}\r\n","export enum Theme {\r\n  DARK_MODE = 'dark-theme',\r\n  LIGHT_MODE = 'light-theme',\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}